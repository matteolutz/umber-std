import "std.ub";
import "heap.ub";

fun fib(n: number): number {
    if n <= 1 {
        return n;
    };

    return fib(n-1) + fib(n-2);
};

fun fib_dyn(limit: number): number *mut {
    let mem: number *mut = heap_malloc(limit*8) as number *mut; 

    mem @= 0;
    (mem+8) @= 1;

    for let mut i: number = 2; i <= limit; i += 1 {
        (mem + (i * 8)) @= *(mem + ((i-1) * 8)) + *(mem + ((i-2) * 8));
    };

    return mem;
};
