#include std.ub
#include memory.ub

fun fib(n: number): number {
	if n <= 1 {
		return n;
	};

	return fib(n-1) + fib(n-2);
};

fun fib_dyn(limit: number): number* {
	let mem: number *mut = malloc(limit*8) as number *mut; 

	for let mut i: number = 0; i <= 1; i += 1 {
		let el_ptr: number *mut = (mem + (i * 8));
		*(el_ptr) = i;
	};

	for let mut i: number = 2; i <= limit; i += 1 {
		let el_ptr: number *mut = (mem + (i * 8));

		*(el_ptr) = *(mem + ((i-1) * 8)) + *(mem + ((i-2) * 8))
	};

	return mem as number*;
};
